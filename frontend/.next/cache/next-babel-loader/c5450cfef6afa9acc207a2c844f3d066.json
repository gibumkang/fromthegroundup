{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport GhostContentAPI from '@tryghost/content-api';\nvar api = new GhostContentAPI({\n  url: process.env.GHOST_URL,\n  key: process.env.GHOST_KEY,\n  version: 'v3'\n});\nexport function getPosts() {\n  return _getPosts.apply(this, arguments);\n}\n\nfunction _getPosts() {\n  _getPosts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return api.posts.browse({\n              limit: 'all',\n              include: 'tags,authors'\n            })[\"catch\"](function (error) {\n              console.error(error);\n            });\n\n          case 2:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getPosts.apply(this, arguments);\n}\n\nexport function getTags() {\n  return _getTags.apply(this, arguments);\n}\n\nfunction _getTags() {\n  _getTags = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var response, data;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return fetch(\"\".concat(process.env.GHOST_URL, \"/ghost/api/v3/content/tags/?key=\").concat(process.env.GHOST_KEY));\n\n          case 3:\n            response = _context2.sent;\n            _context2.next = 6;\n            return response.json();\n\n          case 6:\n            data = _context2.sent;\n            return _context2.abrupt(\"return\", data);\n\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 10]]);\n  }));\n  return _getTags.apply(this, arguments);\n}\n\nexport function getSinglePost(_x) {\n  return _getSinglePost.apply(this, arguments);\n}\n\nfunction _getSinglePost() {\n  _getSinglePost = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(postSlug) {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return api.posts.read({\n              slug: postSlug\n            }, {\n              include: 'tags,authors'\n            })[\"catch\"](function (err) {\n              return console.error(err);\n            });\n\n          case 2:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _getSinglePost.apply(this, arguments);\n}","map":{"version":3,"sources":["/Volumes/Ben Drive/From The Ground Up/website/frontend/lib/ghost.js"],"names":["GhostContentAPI","api","url","process","env","GHOST_URL","key","GHOST_KEY","version","getPosts","posts","browse","limit","include","error","console","getTags","fetch","response","json","data","log","getSinglePost","postSlug","read","slug","err"],"mappings":";;AAAA,OAAOA,eAAP,MAA4B,uBAA5B;AAEA,IAAMC,GAAG,GAAG,IAAID,eAAJ,CAAoB;AAC/BE,EAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,SADc;AAE/BC,EAAAA,GAAG,EAAEH,OAAO,CAACC,GAAR,CAAYG,SAFc;AAG/BC,EAAAA,OAAO,EAAE;AAHsB,CAApB,CAAZ;AAMA,gBAAsBC,QAAtB;AAAA;AAAA;;;uEAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACOR,GAAG,CAACS,KAAJ,CACXC,MADW,CACJ;AACPC,cAAAA,KAAK,EAAE,KADA;AAEPC,cAAAA,OAAO,EAAE;AAFF,aADI,WAKL,UAACC,KAAD,EAAW;AACjBC,cAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACA,aAPW,CADP;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAWP,gBAAsBE,OAAtB;AAAA;AAAA;;;sEAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEkBC,KAAK,WACxBd,OAAO,CAACC,GAAR,CAAYC,SADY,6CACgCF,OAAO,CAACC,GAAR,CAAYG,SAD5C,EAFvB;;AAAA;AAECW,YAAAA,QAFD;AAAA;AAAA,mBAKcA,QAAQ,CAACC,IAAT,EALd;;AAAA;AAKCC,YAAAA,IALD;AAAA,8CAMEA,IANF;;AAAA;AAAA;AAAA;AAQLL,YAAAA,OAAO,CAACM,GAAR;;AARK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAYP,gBAAsBC,aAAtB;AAAA;AAAA;;;4EAAO,kBAA6BC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACOtB,GAAG,CAACS,KAAJ,CACXc,IADW,CAEX;AACCC,cAAAA,IAAI,EAAEF;AADP,aAFW,EAKX;AACCV,cAAAA,OAAO,EAAE;AADV,aALW,WASL,UAACa,GAAD;AAAA,qBAASX,OAAO,CAACD,KAAR,CAAcY,GAAd,CAAT;AAAA,aATK,CADP;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import GhostContentAPI from '@tryghost/content-api';\n\nconst api = new GhostContentAPI({\n\turl: process.env.GHOST_URL,\n\tkey: process.env.GHOST_KEY,\n\tversion: 'v3',\n});\n\nexport async function getPosts() {\n\treturn await api.posts\n\t\t.browse({\n\t\t\tlimit: 'all',\n\t\t\tinclude: 'tags,authors',\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error(error);\n\t\t});\n}\n\nexport async function getTags() {\n\ttry {\n\t\tconst response = await fetch(\n\t\t\t`${process.env.GHOST_URL}/ghost/api/v3/content/tags/?key=${process.env.GHOST_KEY}`\n\t\t);\n\t\tconst data = await response.json();\n\t\treturn data;\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n}\n\nexport async function getSinglePost(postSlug) {\n\treturn await api.posts\n\t\t.read(\n\t\t\t{\n\t\t\t\tslug: postSlug,\n\t\t\t},\n\t\t\t{\n\t\t\t\tinclude: 'tags,authors',\n\t\t\t}\n\t\t)\n\t\t.catch((err) => console.error(err));\n}\n"]},"metadata":{},"sourceType":"module"}