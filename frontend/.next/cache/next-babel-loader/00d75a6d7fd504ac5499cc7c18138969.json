{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport GhostContentAPI from '@tryghost/content-api';\nimport { tags } from '@tryghost/helpers';\nvar api = new GhostContentAPI({\n  url: process.env.GHOST_URL,\n  key: process.env.GHOST_KEY,\n  version: 'v3'\n});\nexport function getPosts() {\n  return _getPosts.apply(this, arguments);\n}\n\nfunction _getPosts() {\n  _getPosts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return api.posts.browse({\n              limit: 'all',\n              include: 'tags'\n            })[\"catch\"](function (err) {\n              console.error(err);\n            });\n\n          case 2:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getPosts.apply(this, arguments);\n}\n\nexport function getTags() {\n  return _getTags.apply(this, arguments);\n}\n\nfunction _getTags() {\n  _getTags = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return api.posts.forEach(function (post) {\n              tags(post, {\n                prefix: 'Posted in: ',\n                suffix: '.'\n              });\n            });\n\n          case 2:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getTags.apply(this, arguments);\n}","map":{"version":3,"sources":["/Volumes/Ben Drive/From The Ground Up/website/frontend/lib/ghost.js"],"names":["GhostContentAPI","tags","api","url","process","env","GHOST_URL","key","GHOST_KEY","version","getPosts","posts","browse","limit","include","err","console","error","getTags","forEach","post","prefix","suffix"],"mappings":";;AAAA,OAAOA,eAAP,MAA4B,uBAA5B;AACA,SAASC,IAAT,QAAqB,mBAArB;AAEA,IAAMC,GAAG,GAAG,IAAIF,eAAJ,CAAoB;AAC/BG,EAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,SADc;AAE/BC,EAAAA,GAAG,EAAEH,OAAO,CAACC,GAAR,CAAYG,SAFc;AAG/BC,EAAAA,OAAO,EAAE;AAHsB,CAApB,CAAZ;AAMA,gBAAsBC,QAAtB;AAAA;AAAA;;;uEAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACOR,GAAG,CAACS,KAAJ,CACXC,MADW,CACJ;AACPC,cAAAA,KAAK,EAAE,KADA;AAEPC,cAAAA,OAAO,EAAE;AAFF,aADI,WAKL,UAACC,GAAD,EAAS;AACfC,cAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACA,aAPW,CADP;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAWP,gBAAsBG,OAAtB;AAAA;AAAA;;;sEAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACOhB,GAAG,CAACS,KAAJ,CAAUQ,OAAV,CAAkB,UAACC,IAAD,EAAU;AACxCnB,cAAAA,IAAI,CAACmB,IAAD,EAAO;AAAEC,gBAAAA,MAAM,EAAE,aAAV;AAAyBC,gBAAAA,MAAM,EAAE;AAAjC,eAAP,CAAJ;AACA,aAFY,CADP;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import GhostContentAPI from '@tryghost/content-api';\nimport { tags } from '@tryghost/helpers';\n\nconst api = new GhostContentAPI({\n\turl: process.env.GHOST_URL,\n\tkey: process.env.GHOST_KEY,\n\tversion: 'v3',\n});\n\nexport async function getPosts() {\n\treturn await api.posts\n\t\t.browse({\n\t\t\tlimit: 'all',\n\t\t\tinclude: 'tags',\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.error(err);\n\t\t});\n}\n\nexport async function getTags() {\n\treturn await api.posts.forEach((post) => {\n\t\ttags(post, { prefix: 'Posted in: ', suffix: '.' });\n\t});\n}\n"]},"metadata":{},"sourceType":"module"}