{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport GhostContentAPI from '@tryghost/content-api';\nvar api = new GhostContentAPI({\n  url: 'process.env.GHOST_URL',\n  key: 'process.env.GHOST_KEY',\n  version: 'v3'\n});\nexport function getPosts() {\n  return _getPosts.apply(this, arguments);\n}\n\nfunction _getPosts() {\n  _getPosts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return api.posts.browse({\n              limit: 'all'\n            })[\"catch\"](function (err) {\n              console.error(err);\n            });\n\n          case 2:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getPosts.apply(this, arguments);\n}","map":{"version":3,"sources":["/Volumes/Ben Drive/From The Ground Up/website/frontend/lib/posts.js"],"names":["GhostContentAPI","api","url","key","version","getPosts","posts","browse","limit","err","console","error"],"mappings":";;AAAA,OAAOA,eAAP,MAA4B,uBAA5B;AAEA,IAAMC,GAAG,GAAG,IAAID,eAAJ,CAAoB;AAC/BE,EAAAA,GAAG,EAAE,uBAD0B;AAE/BC,EAAAA,GAAG,EAAE,uBAF0B;AAG/BC,EAAAA,OAAO,EAAE;AAHsB,CAApB,CAAZ;AAMA,gBAAsBC,QAAtB;AAAA;AAAA;;;uEAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACOJ,GAAG,CAACK,KAAJ,CACXC,MADW,CACJ;AACPC,cAAAA,KAAK,EAAE;AADA,aADI,WAIL,UAACC,GAAD,EAAS;AACfC,cAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACA,aANW,CADP;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import GhostContentAPI from '@tryghost/content-api';\n\nconst api = new GhostContentAPI({\n\turl: 'process.env.GHOST_URL',\n\tkey: 'process.env.GHOST_KEY',\n\tversion: 'v3',\n});\n\nexport async function getPosts() {\n\treturn await api.posts\n\t\t.browse({\n\t\t\tlimit: 'all',\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.error(err);\n\t\t});\n}\n"]},"metadata":{},"sourceType":"module"}